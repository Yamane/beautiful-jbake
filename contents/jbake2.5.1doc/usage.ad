= Usage
Jonathan Bullock
2016-10-03
:jbake-type: simple
:jbake-tags: 
:jbake-status: published
:idprefix:

== 使い方

引数なしで jbake を実行すると `-h` を付けたときと同じく使用方法のテキストが表示されます。

----
$ jbake
----

=== Bake コマンド

bake コマンドはコンテンツとテンプレートを上手い具合に調理して、しっかり火の通ったWebサイトに仕上げます。
その方法は用途によっていくつか選ぶことが出来ます。

`-b` オプションの後ろに何も指定しない場合、現在の作業ディレクトリが bake 対象のコンテンツの位置と認識し、直下の `output` ディレクトリに調理結果を配置します。

----
$ jbake -b
----

NOTE: `output` ディレクトリがまだ無い場合、JBake はこのディレクトリを生成します。

<source>ディレクトリのみをパラメータに指定した場合、調理結果は<source>ディレクトリの直下に生成されます。

----
$ jbake -b <source>
----

加えて<output>ディレクトリも指定すれば、すべてお好みの方法で料理することができます。

----
$ jbake -b <source> <output>
----

<source>ディレクトリと<output>ディレクトリの両方を指定する場合には、 `-b` オプションは省略可能です。

----
$ jbake <source> <output>
----


=== 初期化コマンド

初期化コマンドは、指定したディレクトリにプロジェクトに必要になるディレクトリ構造と多くのサンプルコンテンツ、テンプレートを配置します。
その際には、テンプレートの記述言語としてどのテンプレートエンジンを使用するかを選ぶことができます。

`-i` オプションの後ろに何も指定しない場合、現在の作業ディレクトリ内に、 http://freemarker.org[Freemarker] をテンプレートエンジンとして利用するプロジェクトを生成します、。

----
$ jbake -i
----

初期化するディレクトリを指定したい場合には、パラメータとして追加します。

----
$ jbake -i <directory>
----

テンプレートエンジンを変更したい場合には  `-t` オプションを使って指定します。

----
$ jbake -i -t <freemarker|groovy|groovy-mte|thymeleaf|jade>
----

NOTE: 利用可能なテンプレートエンジンは http://freemarker.org[Freemarker]、 http://www.groovy-lang.org/[Groovy Simple and Markup]、 http://www.thymeleaf.org/[Thymeleaf]、 https://github.com/neuland/jade4j[Jade] です。

==== サンプルプロジェクトの構造

サンプルプロジェクトの構造とテンプレートは JBake をインストールしたディレクトリ ( `JBAKE_HOME` ) にファイルとして保存されています。

* `example_project_freemarker.zip`
* `example_project_groovy.zip`
* `example_project_groovy-mte.zip`
* `example_project_thymeleaf.zip`
* `example_project_jade.zip`

初期化に使用されるプロジェクト構造やテンプレートを変更したい場合、上記のZIPファイルを置き換えてください。
以降、JBake は置き換えられたファイルを基にして初期化処理を行います。

=== サーバーコマンド

サーバーコマンドを利用すると、HTTP WEBサーバーが立ち上がり、生成されたサイトの見た目を確認することができます。
リリース前にサイトの内容をプレビューするのに便利です。

`-s` オプションを使用すると、JBake はサーバーモードで起動し、http://localhost:8820/ にアクセスすることによって生成されるサイトをプレビューすることができるようになります。
デフォルトでは `output` ディレクトリの内容が表示されます。

----
$ jbake -s
----

NOTE: ローカルポートの番号は設定ファイルによって変更することができます。

追加のパラメータを指定することによって、表示するディレクトリを変更することができます。

----
$ jbake -s <directory>
----

==== 監視モード

サーバーモードで実行されている間、JBake は Content ディレクトリ内の変更 (新しいファイルの追加や、既存ファイルの変更) を監視し、検知した場合には自動的に変換を実施します。そのため、ブラウザの表示内容更新を行うことで出力結果をすぐに確認することができます。

このモードはインクリメンタルレンダリングと組み合わせて使用することをオススメします。
やり方の詳細については <<コンテンツストアの永続化>> の設定オプションを参照してください。

=== コマンドの結合

オプションコマンドは以下のように複数指定することもできます。

----
$ jbake -b -s
----

上記コマンドでは、JBake はサイトを生成した後にサーバーモードでも起動します。

