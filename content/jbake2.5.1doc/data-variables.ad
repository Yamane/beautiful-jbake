= Data Variables
Jonathan Bullock
2017-01-30
:jbake-type: simple
:jbake-tags: 
:jbake-status: published
:idprefix:

== データモデル

データモデルは（使用するテンプレートエンジンに関係なく）展開され、各テンプレート処理時に参照することができます。
テンプレートではそのデータモデルを用いて、出力時のロジックを実行することができます。

=== Global

これらのデータ値は、すべてのテンプレートで参照することができます。

- `version` = 現在使用している JBake のバージョン
- `published_date` = Bake (変換) 実施日
- `[type]s` = [type] 別のコンテンツ一覧 (例: posts の場合 type=post で定義されたすべてのコンテンツ)
- `published_content` = type に関係なく status=published が定義された全てのコンテンツ
- `published_posts` = 日付降順に並んだ type=post で status=published なコンテンツの一覧
- `published_pages` = 日付降順に並んだ type=page で status=published なコンテンツの一覧
- `all_content` = 全てのコンテンツ (type も status も関係なく)
- `alltags` = status=published なコンテンツ内で使用されているタグの一覧
- `content.rootpath` = プロジェクトのルートへの相対パス
- `config.[option]` =  jbake.properties ファイルに記述された内容のマップ

`jbake.properties` ファイル内の記述を参照する場合には、データ項目名の `.` を `_` に変換してください。
たとえば、 `template.index.file=index.ftl` を参照する場合には、 `config.template_index_file` と指定します。

テンプレート内では、一覧 ( Collection ) データをループで回して、各コンテンツ内の要素にアクセスすることができます。
ループのスコープ内では、`content.title` や、 `content.body` など、`content.[value]` という記述でコンテンツの各要素を参照します。

=== Page / Post / Custom

Page、Post または独自に定義したテンプレート内では、次のデータが定義されています。

- `content.[value]` = 処理するファイルに記述された内容のマップ

`content.title` などのメタデータヘッダや、ファイルのBody要素である `content.body` など、全てのデータに対してアクセスが可能です。

またマップには以下の情報も含まれて居ます。

- `content.file` = ソースファイルへのフルパス
- `content.uri` = 変換後ファイルのURI

=== Index

このテンプレートでは、ページングを実現するために必要となる変数を参照することができます。

- `nextFileName` = 次ページが存在する場合、そのページのファイル名
- `previousFileName` = 前ページが存在する場合、そのページのファイル名
- `numberOfPages` = 総ページ数 (バージョン2.5.1以降)
- `currentPageNumber` = 現在のページ番号 (バージョン2.5.1以降)

これらの変数を利用すると、テンプレート内でページを前後するためのUIが提供できるようになります。

NOTE: これらの変数は存在しない場合もありうるので、参照する際には存在チェックが必要です。

=== Tags

このテンプレートでは以下の追加データが定義されています。

- `tag` = 処理対象となっているタグ
- `tag_posts` = 該当タグが定義された type=post で status=published なコンテンツの一覧 (日付降順)
- `tagged_documents` = type に関係なく status=published で該当タグが定義されたコンテンツの一覧 (日付降順)
